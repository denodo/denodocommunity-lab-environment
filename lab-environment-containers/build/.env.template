# Global network configuration
NET_SUBNET=172.30.0.0/24
HOST_ALIAS=host.docker.internal

##########
# Denodo #
##########
# For Denodo Customers:     DENODO_VERSION=harbor.open.denodo.com/denodo-9/images/denodo-platform:latest
# For Denodo Express Users: DENODO_VERSION=harbor.open.denodo.com/denodo-express/denodo-platform:latest
DENODO_VERSION=harbor.open.denodo.com/denodo-express/denodo-platform:latest
# For Denodo Customers:     DENODO_VERSION=harbor.open.denodo.com/denodo-9/images/solution-manager:latest
# For Denodo Express Users: **This component is not available in Denodo Express**
DENODO_SM_VERSION=harbor.open.denodo.com/denodo-9/images/solution-manager:latest
# For Denodo Customers:     DENODO_AI_SDK_VERSION=harbor.open.denodo.com/denodo-connects-9/images/ai-sdk:latest
# For Denodo Express Users: DENODO_AI_SDK_VERSION=harbor.open.denodo.com/denodo-express/ai-sdk:latest
DENODO_AI_SDK_VERSION=harbor.open.denodo.com/denodo-express/ai-sdk:latest
# Full Path to your Denodo Standalone license file
DENODO_SA_LIC=../res/denodo/license/
# Full Path to your Denodo Solution Manager license file
DENODO_SOL_LIC=../res/denodo/license/
# Type for the Solution Manager environment: PRODUCTION,DEVELOPMENT,EVALUATION
DENODO_SOL_LIC_TYPE=DEVELOPMENT

# Denodo Encryption Key
#DENODO_KEYSTORE=
#DENODO_KEYSTORE_TYPE=
#DENODO_KEYSTORE_PASSWORD_VALUE=
#DENODO_KEYSTORE_KEY_ALIAS=

# Virtual Dataport & Data Catalog (standalone)
# ============================================
DENODO_VDP_HOSTNAME=vdp
DENODO_VDP_EXTERNAL_PORT=9999
# INTERNAL PORT = 9999
DENODO_VDP_EXTERNAL_ODBC_PORT=9996
# INTERNAL PORT = 9996
DENODO_VDP_EXTERNAL_JMX_PORT=9997
# INTERNAL PORT = 9997
DENODO_VDP_EXTERNAL_ARROWFLIGHTSQL_PORT=9994
DENODO_VDP_ADMIN_USER=admin
DENODO_VDP_ADMIN_PWD=admin

# Data Catalog / GraphQL / Odata / RESTful WS
# ===========================================
DENODO_VDP_EXTERNAL_WEB_PORT=9090
# INTERNAL PORT = 9090

# Route to init files
# Files must match to the following syntax: *.vql, dc-metadata-*.zip
DENODO_VDP_INIT_VQL_DIR=../res/denodo/container-entrypoint-init
DENODO_VDP_FILES_DIRECTORY=../res/denodo/files/
DENODO_VDP_GRAPHQL_FILES_DIRECTORY=../res/graphql

# Design Studio (standalone)
# =============================
DENODO_DS_EXTERNAL_WEB_PORT=19090
DENODO_DS_HOSTNAME=design-studio

# Language of the Web Tools
# =============================
# Design Studio
DENODO_DS_CUSTOM_LANG_DIR=../res/denodo/files/custom-lang/design-studio
DENODO_DS_CUSTOM_LANG=en
# Data Catalog
DENODO_DC_CUSTOM_LANG_DIR=../res/denodo/files/custom-lang/data-catalog
DENODO_DC_CUSTOM_LANG=en

# Scheduler server  (standalone)
# =============================
DENODO_SCHED_HOSTNAME=sched
DENODO_SCHED_EXTERNAL_PORT=8000
# INTERNAL PORT = 8000
# Index server
# ================
DENODO_SCHED_INDEX_EXTERNAL_PORT=9000
# INTERNAL PORT = 9000
# Scheduler Admin Tool
# ====================
DENODO_SCHED_EXTERNAL_WEB_PORT=39090
# INTERNAL PORT = 9090
# Route to init files. 
# Files must match to the following syntax: denodo-scheduler-*.zip
DENODO_SCHED_INIT_ZIP_DIR=../res/denodo/container-entrypoint-init
#DENODO_SCHED_METADATA_VOLUME=
#DENODO_SCHED_INDEX_VOLUME=

# Denodo Cache / External Metadata
# ================================
METADATA_DB_HOSTNAME=metadata
METADATA_DB_PORT=15432
# Postgresql Container
# Alternative: METADATA_DB_VERSION=public.ecr.aws/docker/library/postgres:12-alpine
METADATA_DB_VERSION=postgres:12-alpine
METADATA_DB_PWD=admin
# Route to init files
METADATA_DB_INIT_SCRIPT=../../lab-environment-sources/res/db/metadatadb-init.sql
METADATA_DB_DATA_DIRECTORY=../../lab-environment-sources/res/db/

# Denodo Solution Manager
# =======================
DENODO_SM_HOSTNAME=sm
DENODO_SM_EXTERNAL_WEB_PORT=19091
# Environments
DENODO_SM_ENV_1_HOSTNAME=denodo-dev

##############################
# Data Sources configuration #
##############################

# MariaDB (for Relational database) 
# =================================
RELATIONAL_DB_HOSTNAME=mariadb
RELATIONAL_DB_EXTERNAL_PORT=3306
# INTERNAL PORT = 3306
# MariaDB Container
# Alternative: RELATIONAL_DB_VERSION=public.ecr.aws/docker/library/mariadb:11.3.2
RELATIONAL_DB_VERSION=mariadb:11.3.2
RELATIONAL_DB_PWD=admin
# Route to init files
RELATIONAL_DB_INIT_SCRIPT=../../lab-environment-sources/res/db/mariadb-init.sql
RELATIONAL_DB_DATA_DIRECTORY=../../lab-environment-sources/res/db/

# Postgresql (for Analytical database) 
# ====================================
ANALYTICAL_DB_HOSTNAME=postgres
ANALYTICAL_DB_PORT=5432
# INTERNAL PORT = 5432
# Postgresql Container
# Alternative: ANALYTICAL_DB_VERSION=public.ecr.aws/docker/library/postgres:12-alpine
ANALYTICAL_DB_VERSION=postgres:12-alpine
ANALYTICAL_DB_PWD=admin
# Route to init files
ANALYTICAL_DB_INIT_SCRIPT=../../lab-environment-sources/res/db/postgresql-init.sql
ANALYTICAL_DB_DATA_DIRECTORY=../../lab-environment-sources/res/db/

# MongoDB (for NoSQL database) 
# ============================
NOSQL_DB_HOSTNAME=mongo
NOSQL_DB_EXTERNAL_PORT=27017
# INTERNAL PORT = 27017
# MongoDB Container (Use version mongo:4.4.18 if you see this error: "MongoDB 5.0+ requires a CPU with AVX support")
# Alternative: NOSQL_DB_VERSION=public.ecr.aws/docker/library/mongo:7.0.8
NOSQL_DB_VERSION=mongo:7.0.8
NOSQL_DB_ROOT_ADMIN=mongoadmin
NOSQL_DB_ROOT_PWD=admin
# Route to init files
NOSQL_DB_INIT_DIRECTORY=../../lab-environment-sources/res/nosql/mongodb/

# Apache Tomcat (for Web services) 
# ================================
APPSERVER_HOSTNAME=tomcat
APPSERVER_EXTERNAL_PORT=8080
# INTERNAL PORT = 8080
# Apache Tomcat Container
# Alternative: APPSERVER_VERSION=public.ecr.aws/docker/library/tomcat:8.5.82-jdk8-openjdk
APPSERVER_VERSION=tomcat:8.5.82-jdk8-openjdk
# Route to war files
APPSERVER_WAR_DIRECTORY=../../lab-environment-sources/res/war/

# Apache HTTP 
# ===========
HTTPSERVER_HOSTNAME=webserver
HTTPSERVER_EXTERNAL_PORT=1080
# INTERNAL PORT = 80
# Apache HTTP Container
# Alternative: HTTPSERVER_VERSION=public.ecr.aws/docker/library/httpd:2.4.59-alpine
HTTPSERVER_VERSION=httpd:2.4.59-alpine
# Route to war files
HTTPSERVER_WWW_DIRECTORY=../../lab-environment-sources/res/files/

# Apache DS (for LDAP) 
# ====================
LDAP_HOSTNAME=ldapserver
LDAP_EXTERNAL_PORT=10389
# INTERNAL PORT = 10389
# LDAP Container
LDAP_VERSION=1000kit/apacheds 
LDAP_ADMIN_PASSWORD=admin
LDAP_DOMAIN_NAME=denodo
LDAP_DOMAIN_SUFFIX=loc
# Route to ldif files
LDAP_LDIF_DIRECTORY=../../lab-environment-sources/res/ldap/

# Keycloak (for SSO)
# ==================
SSO_HOSTNAME=sso
SSO_EXTERNAL_PORT= 8443
# INTERNAL PORT = 8443
# Keycloak Container
# Alternative: SSO_VERSION=public.ecr.aws/bitnami/keycloak:21.0.2
SSO_VERSION=bitnamilegacy/keycloak:21.0.2
SSO_USER=denodo
SSO_PASSWORD=denodo
# Route to keycloak file
SSO_CONF_FILE=../../lab-environment-sources/res/sso/denodo-realm.json

# GIT (for VCS)
# =============
VCS_HOSTNAME=gitlab
VCS_EXTERNAL_HTTP_PORT=1180
# INTERNAL HTTP PORT = 80
VCS_EXTERNAL_HTTPS_PORT=1443
# INTERNAL HTTPS PORT = 443
VCS_EXTERNAL_SSH_PORT=1022
# INTERNAL SSH PORT = 22
# Gitlab Container
VCS_VERSION=gitlab/gitlab-ce:16.2.8-ce.0
VCS_ROOT_PASSWORD=d3n0d0adm0n

# MinIO (for S3-compatible Distributed File System) -- PORT: 9000
DFS_VERSION=quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
DFS_MC_VERSION=quay.io/minio/mc:RELEASE.2024-11-21T17-21-54Z
DFS_PORT=9000
DFS_CONSOLE_PORT=9001
DFS_ROOT_ADMIN=denodo
DFS_ROOT_PWD=denodo123
DFS_BUCKET_NAME=denodo
DFS_BUCKET_DIRECTORY=../../lab-environment-sources/res/dfs/buckets/
# ACCESS_KEY=otCAQm5UZ3MQqXRnCvC4
# SECRET_KEY=8ZWWdvuUdwHiFlaUAcFEIb0o2dgoYfqFKMKlMpNV

# ########################
# Other applications
# ########################

# Mongo Express 
# =============
NOSQL_GUI_HOSTNAME=mongo-express
NOSQL_GUI_EXTERNAL_PORT=8111
# INTERNAL PORT = 8081
# Mongo Express Container
# Alternative: NOSQL_GUI_VERSION=public.ecr.aws/docker/library/mongo-express:1.0.2
NOSQL_GUI_VERSION=mongo-express:1.0.2

# GRAPHQL PLAYGROUND 
# ==================
GRAPHQL_GUI_HOSTNAME=graphql-playground
GRAPHQL_GUI_EXTERNAL_PORT=4000
# INTERNAL PORT = 4000
# Graphql Playground Container
GRAPHQL_GUI_VERSION=imega/graphql-playground:0.0.3

# DATABASE CLIENT
# ===============
DB_GUI_HOSTNAME=cloudbeaver
DB_GUI_EXTERNAL_PORT=8978
# INTERNAL PORT = 8978
# Cloudbeaver Container
DB_GUI_VERSION=dbeaver/cloudbeaver:23.2.2

# JUPYTER NOTEBOOK
# ================
NOTEBOOK_HOSTNAME=notebook
NOTEBOOK_EXTERNAL_PORT=8888
# INTERNAL PORT = 8888
# Cloudbeaver Container
NOTEBOOK_VERSION=quay.io/jupyter/datascience-notebook:2024-03-14
# Route to notebook files
NOTEBOOK_DIRECTORY=../../lab-environment-sources/res/notebook/
NOTEBOOK_TOKEN=denodo

# REVERSE PROXY
# ================
REVERSE_PROXY_HOSTNAME=proxy
# Alternative: REVERSE_PROXY_VERSION=public.ecr.aws/nginx/nginx:1.27.2-alpine
REVERSE_PROXY_VERSION=nginx:1.27.2
REVERSE_PROXY_EXTERNAL_PORT=80
REVERSE_PROXY_EXTERNAL_PORT_SSL=443
REVERSE_PROXY_CONF=../res/nginx/nginx.conf
REVERSE_PROXY_SSL_PUBLIC_CERT=../res/nginx/ssl/cert.crt
REVERSE_PROXY_SSL_PRIVATE_KEY=../res/nginx/ssl/cert.key

# ###############################
# Denodo AI SDK 
# ###############################  
DENODO_AI_SDK_HOSTNAME=ai-sdk
DENODO_AI_SDK_EXTERNAL_PORT=8008
DENODO_AI_SDK_MODE=api
DENODO_CHATBOT_EXTERNAL_PORT=9992
DENODO_CHATBOT_CONFIG_FILE=../res/denodo/chatbot/chatbot_config.env
DENODO_AI_SDK_CONFIG_FILE=../res/denodo/chatbot/sdk_config.env

AI_SDK_VER=0.10
CUSTOM_INSTRUCTIONS= 
AI_SDK_ROOT_PATH=denodo-ai-sdk
CHATBOT_ROOT_PATH=denodo-chatbot

# Databases to vectorize
# ================================
VDB_NAMES=admin
VECTOR_STORE=Chroma

# LLM Infrastructure configuration 
# ================================
## OpenAI, Bedrock, Google, Mistral, Ollama, ...
PROVIDER=
## gpt-4o, anthropic.claude-3-5-sonnet-20240620-v1:0, gemini-1.5-pro, mistral-large-latest, llama-3.1-nemotron-70b-instruct, ...
LLM_MODEL=
LLM_TEMPERATURE=0.0
LLM_MAX_TOKENS=2048
## text-embedding-3-large, titan-embed-text-v2, gecko, mistral-embed, ...
EMB_MODEL=
THINKING_LLM_PROVIDER=
THINKING_LLM_MODEL=
THINKING_LLM_TEMPERATURE=1.0
THINKING_LLM_MAX_TOKENS=10240
### OPENAI Security options configuration
OPENAI_API_KEY=
OPENAI_ORG_ID=
OPENAI_PROXY=
### AZURE OPENAI Security options configuration
AZURE_OPENAI_ENDPOINT= 
AZURE_API_VERSION= 
AZURE_OPENAI_API_KEY= 
AZURE_OPENAI_PROXY=
### GOOGLE Vertex AI Security options configuration (JSON file storing your Google Application Credentials)
GOOGLE_APPLICATION_CREDENTIALS=
### GOOGLE AI Studio
GOOGLE_AI_STUDIO_API_KEY=
### GROQ Security options configuration
GROQ_API_KEY=
### BEDROCK Security options configuration
AWS_REGION= 
AWS_PROFILE_NAME= 
AWS_ROLE_ARN= 
AWS_ACCESS_KEY_ID= 
AWS_SECRET_ACCESS_KEY= 
### MISTRAL Security options configuration
MISTRAL_API_KEY= 
### NVIDIA NIM Security options configuration
NVIDIA_API_KEY= 
NVIDIA_BASE_URL= 
### OLLAMA
OLLAMA_API_BASE_URL=

# ###############################
# Denodo SAMPLE CHATBOT tutorial
# ###############################  
# Denodo Express with banking datasources
DENODO_CHATBOT_AI_SDK_HOSTNAME=ai-sdk-chatbot
DENODO_CHATBOT_DENODO_VDP_HOSTNAME=ai-sdk-denodo
DENODO_CHATBOT_VDP_EXTERNAL_WEB_PORT=9090
DENODO_CHATBOT_VDP_EXTERNAL_ARROWFLIGHTSQL_PORT=9994
DENODO_CHATBOT_VDP_EXTERNAL_ODBC_PORT=9996
DENODO_CHATBOT_VDP_EXTERNAL_JMX_PORT=9997
DENODO_CHATBOT_VDP_EXTERNAL_PORT=9999
DENODO_CHATBOT_SAMPLE_DATA_PATH=../../lab-environment-sources/res/files/df/banking
DENODO_CHATBOT_SAMPLE_DATA_VQL=../../lab-environment-sources/res/denodo/vql/DENTUT18-start.vql
DENODO_CHATBOT_SAMPLE_DATA_DC_METADATA=../../lab-environment-sources/res/denodo/zip/dc-metadata-DENTUT18.zip
DATA_CATALOG_URL=http://ai-sdk-denodo:9090/denodo-data-catalog/
SERVICE_ACCOUNT_USERNAME=admin
SERVICE_ACCOUNT_PASSWORD=admin
DENODO_CHATBOT_SAMPLE_VDB_NAMES=samples_bank
